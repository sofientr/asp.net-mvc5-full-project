@model Inspinia_MVC5.Models.Direction

@{
    ViewBag.Title = "Create";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Create</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("List", "Index")
            </li>
            <li class="active">
                <strong>Create</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
        </div>
    </div>
</div>


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Create Direction</h5>
                </div>
                <div class="ibox-content">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true)



                        <div class="form-group">
                            @Html.LabelFor(model => model.Nom, new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control"@*, @Value = "" + Session["Direction"].ToString()*@}
                        })
                                @Html.ValidationMessageFor(model => model.Nom)
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.Budget, new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Budget)
                                @Html.ValidationMessageFor(model => model.Budget)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Année, new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Année)
                                @Html.ValidationMessageFor(model => model.Année)
                            </div>
                        </div>
                        @{
                            var socite = Session["Soclogo"].ToString();
                        }
                        <div class="form-group">
                            @Html.LabelFor(model => model.SocilogoID, "Société", new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @*@Html.EditorFor(model => model.SocilogoID, new { htmlAttributes = new { @readonly = "", @class = "form-control", @Value = "" + Session["Soclogo"].ToString()}})
                                @Html.ValidationMessageFor(model => model.SocilogoID)*@
                                <input class="form-control" type="text" name="Ste" id="Ste" Value="@socite" readonly />


                            </div>
                        </div>
                        <div class="ibox ">
                            <div class="ibox-title">
                                <h5>Droit d'accés </h5>
                                <span class="label label-primary">DA</span>
                                <div class="ibox-tools">
                                    <a class="collapse-link">
                                        <i class="fa fa-chevron-up"></i>
                                    </a>


                                </div>

                            </div>
                            <div class="ibox-content">

                                <div class="divScroll">
                                    <table class="table table-striped table-bordered table-hover dataTables-example" id="Tableau">
                                        <thead>
                                            <tr>
                                                <th style="width:150px;">
                                                    Table
                                                </th>
                                                <th style="width:150px;">
                                                    Ajout
                                                </th>
                                                <th style="width:150px;">
                                                    Modification
                                                </th>

                                                <th style="width:150px;">
                                                    Suppression
                                                </th>
                                                <th style="width:150px;">
                                                    Affichage
                                                </th>
                                                @*<th style="width:150px;">

                                </th>*@

                                            </tr>

                                        </thead>
                                        <tbody></tbody>
                                        <tfoot>
                                            @{
                                                Inspinia_MVC5.Models.MED_TRABELSI db = new Inspinia_MVC5.Models.MED_TRABELSI();
                                                List<Inspinia_MVC5.Models.TABLES_BD> TABLES_BD = db.TABLES_BD.ToList();
                                                foreach (var item in TABLES_BD)
                                                {
                                                    var idajout = "ajoutT" + item.Id;
                                                    var idModif = "ModifT" + item.Id;
                                                    var idsupp = "suppT" + item.Id;
                                                    var idaff = "affT" + item.Id;

                                                    <tr id="@item.Id">
                                                        <td>
                                                            @item.Libelle_Table
                                                        </td>
                                                        <td>
                                                            <input type="checkbox" name="ajout" id="@idajout" value="@idajout" onchange="check(this)" />
                                                        </td>
                                                        <td>
                                                            <input type="checkbox" name="Modif" id="@idModif" value="@idModif" onchange="check(this)" />
                                                        </td>
                                                        <td>
                                                            <input type="checkbox" name="supp" id="@idsupp" value="@idsupp" onchange="check(this)" />
                                                        </td>
                                                        <td>
                                                            <input type="checkbox" name="aff" id="@idaff" value="@idaff" onchange="check(this)" />
                                                        </td>
                                                        @*<td>
                                               <button class="btn btn-info btn-circle" type="button" title="Validée" style="height: 28px;
                                        padding-bottom: 3px; padding-top: 3px;" id="ValidateBtn" onclick=" Validate();">
                                                   <i class="fa fa-check"></i>
                                               </button>
                                           </td>*@


                                                    </tr>
                                                }
                                            }



                                        </tfoot>
                                    </table>
                                </div>

                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-primary" />
                                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-white" })
                            </div>
                        </div>
                    </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
   
    function check(elee) {
        if (elee.checked) {
            $.ajax({
                type: 'POST',
                url: "/Directions/AddLignesDroitAcces?droit=" + elee.value,
                success: function (response) {

                }
            });
        }
        else {
            $.ajax({
                type: 'POST',
                url: "/Directions/DeleteLignesDroitAcces?droit=" + elee.value,
                success: function (response) {

                }
            });

        }
    }
</script>

